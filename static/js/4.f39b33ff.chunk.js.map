{"version":3,"sources":["components/dialogs/Dialogs.module.css","components/dialogs/message/Message.jsx","components/dialogs/dialogItem/DialogItem.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","messageRow","message","myMessage","DialogItem","path","id","dialog","active","to","src","image","alt","name","maxLength50","maxLengthCreator","AddMessageFormRedax","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","newMessageBody","dialogItems","newMessage","values","sendMessage","compose","connect","dispatch","sendMessageCreator"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,yBAAyB,UAAY,2BAA2B,WAAa,8B,yJCW/QC,EARC,SAACC,GACf,OACE,yBAAKC,UAAWC,IAAEC,YAChB,yBAAKF,UAAWC,IAAEE,QAAU,IAAMF,IAAEG,WAAYL,EAAMI,W,QCM7CE,EATI,SAACN,GAClB,IAAIO,EAAO,YAAcP,EAAMQ,GAC/B,OACE,yBAAKP,UAAWC,IAAEO,OAAS,IAAMP,IAAEQ,QACjC,kBAAC,IAAD,CAASC,GAAIJ,GAAM,yBAAKK,IAAKZ,EAAMa,MAAOC,IAAKd,EAAMe,OAASf,EAAMe,Q,iCCiCpEC,EAAcC,YAAiB,IAa/BC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EAZL,SAACnB,GACtB,OACE,0BAAMqB,SAAUrB,EAAMsB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAClBC,SAAU,CAACC,IAAUX,GACdD,KAAK,iBACLa,YAAY,uBACnB,4BAAQ3B,UAAU,UAAlB,mBAOO4B,EAhDC,SAAC7B,GACf,IAAI8B,EAAQ9B,EAAM+B,YAEdC,EAAkBF,EAAMG,QACzBC,KAAK,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,MAAOsB,EAAEtB,MAAOE,KAAMoB,EAAEpB,KAAMqB,IAAKD,EAAE3B,GAAIA,GAAI2B,EAAE3B,QACpE6B,EAAmBP,EAAMQ,SAC1BJ,KAAK,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASnC,QAASmC,EAAEnC,QAASgC,IAAKG,EAAE/B,QAC5BsB,EAAMU,eAM3B,OACE,yBAAKvC,UAAWC,IAAE+B,SAChB,yBAAKhC,UAAWC,IAAEuC,aACdT,GAEJ,yBAAK/B,UAAWC,IAAEoC,UACdD,EAEA,yBAAKpC,UAAWC,IAAEwC,YAChB,yBAAKzC,UAAU,wCACb,kBAACiB,EAAD,CAAqBG,SAdb,SAACsB,GACjB3C,EAAM4C,YAAYD,EAAOH,wB,iCCMhBK,sBACXC,aAlBkB,SAAChB,GACrB,MAAO,CACLC,YAAaD,EAAMC,gBAGE,SAACgB,GACxB,MAAO,CACLH,YAAa,SAACJ,GACZO,EAASC,YAAmBR,SASnBK,CAGbhB","file":"static/js/4.f39b33ff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3i6Ij\",\"dialogItems\":\"Dialogs_dialogItems__2HfOE\",\"active\":\"Dialogs_active__29h-a\",\"dialog\":\"Dialogs_dialog__2vSuO\",\"messages\":\"Dialogs_messages__1dMiD\",\"message\":\"Dialogs_message__3VF5g\",\"myMessage\":\"Dialogs_myMessage__2s6ah\",\"messageRow\":\"Dialogs_messageRow__2u7y_\"};","import React from \"react\";\nimport s from'./../Dialogs.module.css';\n\n\nconst Message = (props) => {\n  return (\n    <div className={s.messageRow}>\n      <div className={s.message + ' ' + s.myMessage}>{props.message}</div>\n    </div>\n  );\n}\n\nexport default Message;","import React from \"react\";\nimport s from'./../Dialogs.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n  let path = \"/dialogs/\" + props.id;\n  return (\n    <div className={s.dialog + ' ' + s.active}>\n      <NavLink to={path}><img src={props.image} alt={props.name} />{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;","import React from \"react\";\nimport s from'./Dialogs.module.css';\nimport Message from \"./message/Message\";\nimport DialogItem from \"./dialogItem/DialogItem\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/formsControl/formsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props) => {\n  let state = props.dialogsPage;\n  \n  let dialogsElements = state.dialogs\n    .map( d => <DialogItem image={d.image} name={d.name} key={d.id} id={d.id}/>);\n  let messagesElements = state.messages\n    .map( m => <Message message={m.message} key={m.id}/>);\n  let newMessageBody = state.newMessageBody;\n\n  let addNewMessage = (values) => {\n      props.sendMessage(values.newMessageBody);\n  };\n  \n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogItems}>\n        { dialogsElements }\n      </div>\n      <div className={s.messages}>\n        { messagesElements }\n\n          <div className={s.newMessage}>\n            <div className=\"block__post-message default-margin-b\">\n              <AddMessageFormRedax onSubmit={addNewMessage} />\n            </div>\n          </div>\n          \n      </div>\n      \n    </div>\n  )\n};\n\nconst maxLength50 = maxLengthCreator(50);\nconst AddMessageForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n        <Field component={Textarea}\n        validate={[required, maxLength50]}       \n               name='newMessageBody'\n               placeholder=\"Enter your message\" />\n        <button className=\"button\">Add Message</button>\n    </form>\n  )\n}\n\nconst AddMessageFormRedax = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\n\nexport default Dialogs;","import React from \"react\";\nimport Dialogs from \"./Dialogs\";\nimport {sendMessageCreator} from \"../../redux/dialogsReducer\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    dialogsPage: state.dialogsPage\n  }\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    sendMessage: (newMessageBody) => {\n      dispatch(sendMessageCreator(newMessageBody));\n    }\n  }\n};\n\n// let AuthRedirectComponent = withAuthRedirect(Dialogs);\n//\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    // withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}